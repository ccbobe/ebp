<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"	
	xsi:schemaLocation="http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	

	
	<!-- 扫描基础包 -->
	<context:component-scan base-package="com.oracle.ebp.*"/>
	
	<!-- 加载数据库驱动信息系统  -->
	<context:property-placeholder  location="classpath:spring/jdbc.properties" />
	
	<!-- druid 数据源startfilter配置 -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
    </bean>
    
	
	<!-- 数据源配置druid  -->
	 <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
	  init-method="init" destroy-method="close"> 
	      <!-- 基本属性 url、user、password -->
	      <property name="url" value="jdbc:mysql://localhost:3306/ebp?characterEncoding=utf-8" />
	      <property name="username" value="root" />
	      <property name="password" value="root" />
		  <property name="driverClassName" value="com.mysql.jdbc.Driver"  ></property>
	      <!-- 配置初始化大小、最小、最大 -->
	      <property name="initialSize" value="1" />
	      <property name="minIdle" value="1" /> 
	      <property name="maxActive" value="20" />
	
	      <!-- 配置获取连接等待超时的时间 -->
	      <property name="maxWait" value="80000" />
	
	      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	      <property name="timeBetweenEvictionRunsMillis" value="60000" />
	
	      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	      <property name="minEvictableIdleTimeMillis" value="300000" />
	
	      <property name="validationQuery" value="SELECT 'x'" />
	      <property name="testWhileIdle" value="true" />
	      <property name="testOnBorrow" value="false" />
	      <property name="testOnReturn" value="false" />
	
	      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
	      <property name="poolPreparedStatements" value="true" />
	      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	
	      <!-- 配置监控统计拦截的filters -->
	      <property name="filters" value="stat" />
	      <property name="proxyFilters">
	          <list>
	              <ref bean="stat-filter" />
	          </list>
	      </property>
      
  	</bean>
	<!-- mybaits/spring整合配置 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
   		<property name="dataSource" ref="dataSource"/>
   		<property name="typeAliasesPackage"  value="com.oracle.ebp.domain.po"/>
   		<property name="configLocation" value="classpath:mybaits/config.xml"/>
   		<property name="mapperLocations"  value="classpath:com/oracle/ebp/dao/impl/*Mapper.xml" />
   		
   	</bean>
   	
 	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
   		<property name="basePackage"  value="com.oracle.ebp.dao.impl" />
   		
   	</bean>
   	 	
	<!-- 事物管理 -->
	 <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 
	
	<!-- 事物配置 -->
	<tx:annotation-driven  transaction-manager="transactionManager" />	


	
</beans>