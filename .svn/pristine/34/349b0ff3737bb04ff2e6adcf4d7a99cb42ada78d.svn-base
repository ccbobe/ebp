package com.oracle.ebp.controller;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import com.oracle.ebp.domain.po.User;
import com.oracle.ebp.exception.UserException;
import com.oracle.ebp.service.impl.UserService;
import com.oracle.ebp.util.MD5Util;

@Controller
public class UserController {
	@Resource
	private UserService service;

	
	/**
	 * 转发至注册页面
	 * @return
	 */
	@RequestMapping("/userRegPage")
	public String userRegPage(){
		
		return "user/register";
	}
	@RequestMapping("/userRegister")
	public String userRegister(User user,Model model,HttpSession session){
		//查询该用户名是否已有重名
		System.out.println(user.getUserName());
		List<User> list = service.queryUserByName(user);
		
		if (!list.isEmpty()) {
			String errors = "已有重复用户名，请另选一个用户名进行注册！";
			model.addAttribute("errors", errors);
			return "redirect:userRegister";
		}
		int flag = service.persist(user);
		System.out.println("flag="+flag);
		if (flag==0) {
			try {
				throw new UserException("用户插入失败，请您重试！");
			} catch (UserException e) {
				model.addAttribute("errors", e.getMessage());
				return "redirect:userRegister";
			}
		}
		session.setAttribute("user", user);
		return "redirect:userModify";
	}
	/**
	 * 用户登录页面
	 * @return
	 */
	@RequestMapping("/userLoginPage")
	public String userLoginPage(){
		
		return "user/login";
	}
	/**
	 * 根据用户名和密码进行登录验证，成功则进入用户主页
	 * @param userName
	 * @param password
	 * @param model
	 * @return
	 */
	@RequestMapping(value="/userLogin")
	public String userLogin(String userName,String password,Model model,HttpSession session){
		User userInput = new User();
		
		userInput.setUserName(userName);
		String md5password =MD5Util.getMD5(password);
		System.out.println(md5password);
		userInput.setPassword(md5password);

		System.out.println(userInput.getPassword());
		//根据用户名和密码进行查询
		List<User> list = service.queryUser(userInput);
		if (list.isEmpty()) {
			try {
				throw new UserException("没有此用户，请验证后再登录");
			} catch (UserException e) {
				
				model.addAttribute("errors", e.getMessage());
				return "redirect:userLoginPage";
			}
		}
		if (list.size()>1) {
			try {
				throw new UserException("用户有重复，请检查后再登录");
			} catch (UserException e) {
				model.addAttribute("errors", e.getMessage());
				return "redirect:userLoginPage";
			}
		}
		session.setAttribute("user", list.get(0));
		
		return "user/index";
	}
	/**
	 * 跳转个人信息修改页面
	 * @return
	 */
	@RequestMapping("/userModify")
	public String userModify(){
		
		return "user/VIPmessage";
	}
	@RequestMapping("/userModifyPassword")
	public void modifyUserPassword(User user,String newpassword,HttpSession session ){
		
		user.setPassword(MD5Util.getMD5(newpassword));
		service.update(user);
		
		return ;
	}
	
}
